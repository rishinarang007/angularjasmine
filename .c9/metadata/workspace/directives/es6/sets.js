{"filter":false,"title":"sets.js","tooltip":"/directives/es6/sets.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":100,"column":3},"action":"insert","lines":["describe('Sets', function() {","","\tit(\"should contain zero items when constructed\", function () {","\t\tvar set = new Set();","\t\texpect(set.size).toBe(0);","\t});","","\tit(\"should contain 1 item when one item is added\", function () {","\t\tvar set = new Set();","\t\tset.add(\"somevalue\");","\t\texpect(set.size).toBe(1);","\t});","","\tit('should allow objects as a key', function() {","\t\tvar set = new Set();","\t\tvar key = {};","\t\tset.add(key);","\t\texpect(set.has(key)).toBe(true);","\t});","","\tit(\"should contain items when given an array in the constructor\", function () {","\t\tvar set = new Set([1,2,3]);","\t\texpect(set.has(1)).toBe(true);","\t});","","\tit(\"should not allow duplicate values\", function () {","\t\tvar set = new Set();","\t\tvar key = {};","\t\tset.add(key);","\t\tset.add(key);","\t\texpect(set.size).toBe(1);","\t});","","\tit(\"should have no items after clear is called\", function () {","\t\tvar set = new Set();","\t\tset.add(1);","\t\tset.add(2);","\t\tset.add(3);","\t\tset.clear();","\t\texpect(set.size).toBe(0);","\t});","","\tit(\"should remove an item when delete is called\", function () {","\t\tvar set = new Set();","\t\tset.add(1);","\t\tset.add(2);","\t\tset.delete(1);","\t\texpect(set.size).toBe(1);","\t});","","\tit(\"should call a callback function once for each item when foreach is invoked\", function() {","    var set = new Set();","   \tset.add('Tom');","   \tset.add('Dick');","   \tset.add('Harry');","","   \tvar iterationCount = 0;","   \tset.forEach(item => iterationCount++);","   \texpect(iterationCount).toBe(3);","  });","","  it('should support for of iteration', function() {","  \tvar set = new Set([1,2,3]);","","  \tvar iterationCount = 0;","  \tfor(var item of set) {","  \t\titerationCount++;","  \t}","  \texpect(iterationCount).toBe(3);","  });","","  it(\"should return an iterator of arrays when entries is called\", function () {","    var set = new Set();","    set.add(\"1\");","","    var entries = set.entries();","    var firstEntry = entries.next().value;","    expect(firstEntry[0]).toBe(\"1\");","    expect(firstEntry[1]).toBe(\"1\");","  });","","  it(\"should return an iterator of values when values is called\", function () {","    var set = new Set();","    set.add(\"1\");","","    var values = set.values();","    var firstValue = values.next().value;","    expect(firstValue).toBe(\"1\");","  });","","  it(\"should be able to be constructed with an iterator\", function () {","  \tvar set = new Set();","  \tset.add(\"1\");","  \tset.add(\"2\");","  \tset.add(\"3\");","","  \tvar set2 = new Set(set.values());","  \texpect(set2.size).toBe(3);","  });","","});"]}]}]]},"ace":{"folds":[],"scrolltop":968,"scrollleft":0,"selection":{"start":{"row":72,"column":3},"end":{"row":72,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":72,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1424161316009,"hash":"ac361d9a6f3390ea62c3d61f781ba0f4acdfe565"}